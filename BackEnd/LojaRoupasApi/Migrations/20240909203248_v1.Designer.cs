// <auto-generated />
using System;
using LojaRoupasApi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LojaRoupasApi.Migrations
{
    [DbContext(typeof(ConnectionContext))]
    [Migration("20240909203248_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.Carrinho", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IdCompra")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Carrinhos");
                });

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.Compra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("IdCarrinho")
                        .HasColumnType("char(36)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCarrinho")
                        .IsUnique();

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.ItemCarrinho", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IdCarrinho")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IdProduto")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCarrinho");

                    b.HasIndex("IdProduto");

                    b.ToTable("ItemCarrinhos");
                });

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tamanho")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1dfc4a8d-7ed1-443c-9cc7-ac71ea9d003b"),
                            Cor = "Preto",
                            Nome = "Camisa Basica",
                            Tamanho = "G",
                            Tipo = "Camisa",
                            Valor = 129m
                        },
                        new
                        {
                            Id = new Guid("1dfc4a8d-7ed1-443c-9cc7-ac71ea9d004b"),
                            Cor = "Branco",
                            Nome = "Camisa Basica",
                            Tamanho = "P",
                            Tipo = "Camisa",
                            Valor = 129m
                        },
                        new
                        {
                            Id = new Guid("1dfc4a8d-7ed1-443c-9cc7-ac71ea9d005b"),
                            Cor = "Branco",
                            Nome = "Camisa Basica",
                            Tamanho = "PP",
                            Tipo = "Camisa",
                            Valor = 129m
                        },
                        new
                        {
                            Id = new Guid("1dfc4a8d-7ed1-443c-9cc7-ac71ea9d006b"),
                            Cor = "Amarelo",
                            Nome = "Camisa Basica",
                            Tamanho = "PP",
                            Tipo = "Camisa",
                            Valor = 129m
                        },
                        new
                        {
                            Id = new Guid("1dfc4a8d-7ed1-443c-9cc7-ac71ea9d007b"),
                            Cor = "Azul",
                            Nome = "Camisa Basica",
                            Tamanho = "M",
                            Tipo = "Camisa",
                            Valor = 129m
                        },
                        new
                        {
                            Id = new Guid("1dfc4a8d-7ed1-443c-9cc7-ac71ea9d008b"),
                            Cor = "Azul",
                            Nome = "Camisa Basica Luxo",
                            Tamanho = "M",
                            Tipo = "Camisa",
                            Valor = 129m
                        });
                });

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.ProdutoEstoque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<Guid>("IdProduto")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto")
                        .IsUnique();

                    b.ToTable("ProdutoEstoque");
                });

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Datanascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.Carrinho", b =>
                {
                    b.HasOne("LojaRoupasApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("Carrinhos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.Compra", b =>
                {
                    b.HasOne("LojaRoupasApi.Domain.Models.Carrinho", "Carrinho")
                        .WithOne("Compra")
                        .HasForeignKey("LojaRoupasApi.Domain.Models.Compra", "IdCarrinho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrinho");
                });

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.ItemCarrinho", b =>
                {
                    b.HasOne("LojaRoupasApi.Domain.Models.Carrinho", "Carrinho")
                        .WithMany("Items")
                        .HasForeignKey("IdCarrinho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaRoupasApi.Domain.Models.Produto", "Produto")
                        .WithMany("ItemCarrinhos")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrinho");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.ProdutoEstoque", b =>
                {
                    b.HasOne("LojaRoupasApi.Domain.Models.Produto", "Produto")
                        .WithOne("ProdutoEstoque")
                        .HasForeignKey("LojaRoupasApi.Domain.Models.ProdutoEstoque", "IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.Carrinho", b =>
                {
                    b.Navigation("Compra");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.Produto", b =>
                {
                    b.Navigation("ItemCarrinhos");

                    b.Navigation("ProdutoEstoque");
                });

            modelBuilder.Entity("LojaRoupasApi.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Carrinhos");
                });
#pragma warning restore 612, 618
        }
    }
}
